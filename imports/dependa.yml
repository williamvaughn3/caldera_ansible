---

- name: "Update Cache"
  apt:
    update_cache: yes
    cache_valid_time: 3600
  register: status
  retries: 100
  until: status is success or ('Failed to lock apt for exclusive operation' not in status.msg and '/var/lib/dpkg/lock' not in status.msg)

- name: "Upgrade all packages to the latest version"
  apt:
    name: "*"
    state: latest
    force_apt_get: false
  register: status
  retries: 100
  until: status is success or ('Failed to lock apt for exclusive operation' not in status.msg and '/var/lib/dpkg/lock' not in status.msg)

- name: "Install Common Apps"
  apt:
    name: "{{ item }}"
    state: present    
    update_cache: yes
  loop: 
    - ntp
    - mlocate
    - vim
    - aptitude
    - openssh-server
    - openssl 
    - shellinabox
    - python3
    - python3-pip
  register: status
  retries: 100
  until: status is success or ('Failed to lock apt for exclusive operation' not in status.msg and '/var/lib/dpkg/lock' not in status.msg)
  ignore_errors: true

- name: Status of Commons
  debug:
    var: status

- name: "Autoremove unused dependency packages"
  apt:
    autoremove: yes
    update_cache: yes
  register: status
  retries: 100
  until: status is success or ('Failed to lock apt for exclusive operation' not in status.msg and '/var/lib/dpkg/lock' not in status.msg)
  ignore_errors: true

- name: Status of Remove and update
  debug:
    var: status

- name: install go
  shell: 'curl -L https://go.dev/dl/go1.19.2.linux-amd64.tar.gz -o go1.19.2.linux-amd64.tar.gz; rm -rf /usr/local/go && tar -C /usr/local -xzf go1.19.2.linux-amd64.tar.gz;'

- name: Check if Go Path already exists
  stat:
    path: "/etc/profile.d/gopath.sh"
  register: exist_check1

- name: Remove Path if Exists
  shell: "rm -rf /etc/profile.d/gopath.sh"
  become: true
  when: exist_check1.stat.exists

- name: Check if Go Path already exists
  stat:
    path: "/etc/profile.d/gopath2.sh"
  register: exist_check2

- name: Remove Path if Exists
  shell: "rm -rf /etc/profile.d/gopath2.sh"
  become: true
  when: exist_check2.stat.exists


- name: Add go to path.
  copy:
    dest: /etc/profile.d/gopath.sh
    content: 'PATH=$PATH:{{ go_path }}'

- name: Add go home to path.
  copy:
    dest: /etc/profile.d/gopath2.sh
    content: '{{ go_home_path }}'

- name: symlink to go
  file:
    src: /usr/local/go/bin/go
    dest: /usr/bin/go
    state: link

- name: Source Both PATH files
  shell:  '/bin/bash -c "source /etc/profile.d/gopath.sh"; /bin/bash -c "source /etc/profile.d/gopath2.sh"'
...

